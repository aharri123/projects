#include <iostream>
#include <vector>
#include <string>
#include <fstream>
#include "flatRatePackage.h"
#include "packageInventory.h"
#include "package.h"
#include "overnightPackage.h"
using namespace std;


PackageInventory::PackageInventory()
{
}

void PackageInventory:: CreateNewPackage(string sname1, string saddress1, string scity1, string sstate1, long szip1, string recname1,string raddress1, string rcity1, string rstate1, long rzip1,string label1, string date1,double weight1,double ounce1,string insurance1, string sigConf1)
{
  package nPackage( sname1, saddress1, scity1, sstate1, szip1, recname1,raddress1,rcity1, rstate1, rzip1, label1, date1, weight1, ounce1, insurance1,sigConf1);
  if(weight1 > 0)
    {
      packages.push_back(nPackage);
      cout<<"Successfully created"<<endl;
    }
  else cout<<"Could not be created"<<endl;
}

 
void PackageInventory::CreateNewOvernight(string sname2,string saddress2, string scity2, string sstate2, long szip2, string recname2, string raddress2,string rcity2, string rstate2, long rzip2, string label2, string date2, double weight2, double ounce2, string insurance2,string sigConf2,string track, double onf)
  {
    overNightPackage nOverNightPackage( sname2, saddress2,scity2,sstate2,szip2,recname2,raddress2, rcity2,rstate2,rzip2,label2,date2,weight2,ounce2,insurance2,sigConf2,onf,track);

    if (weight2 > 0)
      {
	oPackages.push_back(nOverNightPackage);
	cout<<"Successfully created"<<endl;   
      }
    else cout<<"Could not be created"<<endl;  
  }



void PackageInventory::CreateNewFlatRate(string sname3, string saddress3, string scity3, string sstate3, long szip3, string recname3,string raddress3, string rcity3, string rstate3, long rzip3,string label3, string date3,double weight3, double ounce3,string insurance3, string sigConf3,string type3,double wid, double len, double hei)
  {
    FlatRatePackage nFlatRatePackage(sname3,saddress3,scity3, sstate3,szip3,recname3,raddress3,rcity3,rstate3, rzip3,label3,date3,weight3,ounce3,insurance3,sigConf3,type3,wid,len,hei);

    if (type3 =="paddedEnvelope" ||type3=="LegalEnvelope"||type3 =="letter"||type3 =="box")
      {
	fPackages.push_back(nFlatRatePackage);
	cout<<"Successfully Created"<<endl;
      }
    else cout<<"Could not create"<<endl;
  }



  void PackageInventory::PrintAllPackages()
{
  for (int i = 0; i<packages.size(); i++)
    {
      packages[i].printPackage();
    }
}

void PackageInventory::PrintAllOvernightPackages()
{
  for (int i =0; i <oPackages.size();i++)
    {
      oPackages[i].printOPackage();
    }
}

void PackageInventory::PrintAllFlatRatePackages()
{
  for (int i =0; i<fPackages.size(); i++)
    {
      fPackages[i].printFPackage();
    }
}

void PackageInventory::calculateTotalCost(string typeToPrint )
{
  double totalCost = 0.0;
  if (typeToPrint == "packages")
    {
      for (int i = 0; i < packages.size(); i++)
	{
	  totalCost += packages[i].calculateCost();
	}
      cout << "The total cost of all shipping packages is" << totalCost << endl;
    }
  if(typeToPrint =="flatRatePackages")
    {
      for (int i = 0; i < fPackages.size();i++)
	{
	  totalCost += fPackages[i].calculateCost();
	}
      cout<<"The total cost of all flat rate packages is: "<<totalCost<<endl;
    }
  if (typeToPrint =="overnightPackages")
    {
      for (int i = 0; i < oPackages.size();i++)
	{
	  totalCost += oPackages[i].calculateCost();
	}
      cout<<"The total cost of all overnight packages is : "<<totalCost<<endl;
    }
}

void PackageInventory::processFile( string sfile)
{
  //File Stuff//
  ifstream inputfile;
  string command;
  string filetype;

  //Sender info//
  string senderName4;
  string senderAddress4;
  string senderCity4;
  string senderState4;
  long senderZip4;

  //Receiver Info//
  string recipName4;
  string recipAddress4;
  string recipCity4;
  string recipState4;
  long recipZip4;

  //Other Package Details//
  string label4;
  string date4;
  double weight4;
  double costPerOunce4;
  string insuranceType4;
  string signatureConfirmation4;

  //Overnight Package Stuff//
  double overnightFee4;
  string tracking4;

  //Flat rate package stuff//
  string type4;
  double width4;
  double length4;
  double height4;

  inputfile.open(sfile.c_str());

  if (!inputfile)
    {
      cout<<"Shipping file not found"<<endl;
    }
  else 
    {
      cout<<"Shipping file found"<<endl;
      inputfile>>command;
      while(inputfile)
	{
	  if(command=="CreateNewPackage")
	    {
	      inputfile>>senderName4>>senderAddress4>>senderCity4>>senderState4>>senderZip4>>recipName4>>recipAddress4>>recipCity4>>recipState4>>recipZip4>>label4>>date4>>weight4>>costPerOunce4>>insuranceType4>>signatureConfirmation4;
	      
	      
	      CreateNewPackage(senderName4,senderAddress4,senderCity4,senderState4,senderZip4,recipName4,recipAddress4,recipCity4,recipState4,recipZip4,label4,date4,weight4,costPerOunce4,insuranceType4,signatureConfirmation4);
	    }

	  if(command =="CreateNewFlatRate")
	    {
	      inputfile>>senderName4>>senderAddress4>>senderCity4>>senderState4>>senderZip4>>recipName4>>recipAddress4>>recipCity4>>recipState4>>recipZip4>>label4>>date4>>weight4>>costPerOunce4>>insuranceType4>>signatureConfirmation4>>type4>>length4>>width4>>height4;
	      
	      CreateNewFlatRate(senderName4,senderAddress4,senderCity4,senderState4,senderZip4,recipName4,recipAddress4,recipCity4,recipState4,recipZip4,label4,date4,weight4,costPerOunce4,insuranceType4,signatureConfirmation4,type4,length4,width4,height4);
	    }

	  if (command == "CreateNewOvernight")
	    {
	      inputfile>>senderName4>>senderAddress4>>senderCity4>>senderState4>>senderZip4>>recipName4>>recipAddress4>>recipCity4>>recipState4>>recipZip4>>label4>>date4>>weight4>>costPerOunce4>>insuranceType4>>signatureConfirmation4>>tracking4>>overnightFee4;

	      CreateNewOvernight(senderName4,senderAddress4,senderCity4,senderState4,senderZip4,recipName4,recipAddress4,recipCity4,recipState4,recipZip4,label4,date4,weight4,costPerOunce4,insuranceType4,signatureConfirmation4,tracking4,overnightFee4);
	    }

	  if (command =="PrintAllPackages")
	    {
	      PrintAllPackages();
	    }
	  if (command =="PrintAllOvernightPackages")
	    {
	      PrintAllOvernightPackages();
	    }
	  if (command =="PrintAllFlatRatePackages")
	    {
	      PrintAllFlatRatePackages();
	    }
	  if (command =="CalculateTotalCost")
	    {
	      inputfile>>filetype;
		calculateTotalCost(filetype);
	    }
	  inputfile>>command;
	}
    }
  inputfile.close();
}

		

